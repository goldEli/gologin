basePath: /
definitions:
  dto.LoginDto:
    properties:
      email:
        type: string
      jwt:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Post:
    properties:
      author:
        type: string
      body:
        type: string
      createdAt:
        type: string
      deleteAt:
        $ref: '#/definitions/gorm.DeletedAt'
      deleted_on:
        type: integer
      draft:
        type: boolean
      id:
        type: integer
      is_del:
        type: integer
      likes:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
    type: object
  vo.LoginVo:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  vo.RegisterVo:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
host: localhost:5000
info:
  contact:
    email: miaoyu200@qq.com
    name: miaoyu
    url: http://coolcat.io/support
  description: test to
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://github.com/go-programming-tour-book
  title: 博客系统
  version: "1.0"
paths:
  /post:
    get:
      consumes:
      - application/json
      description: 获取所有博客
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              code:
                type: number
              data:
                items:
                  $ref: '#/definitions/models.Post'
                type: array
              message:
                type: string
            type: object
      summary: 获取所有博客
      tags:
      - post
  /users/login:
    post:
      consumes:
      - application/json
      description: 登录账户, 获取 token
      parameters:
      - description: User login
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/vo.LoginVo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              code:
                type: number
              data:
                $ref: '#/definitions/dto.LoginDto'
              message:
                type: string
            type: object
      summary: 登录
      tags:
      - user
  /users/register:
    post:
      consumes:
      - application/json
      description: 账户注册
      parameters:
      - description: 用户注册
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/vo.RegisterVo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              code:
                type: number
              message:
                type: string
            type: object
      summary: 注册
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
